{"version":3,"sources":["components/About.js","components/AddTask.js","components/Footer.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["About","href","rel","target","className","style","background","to","AddTask","props","useState","text","setText","day","setDay","reminder","setReminder","onSubmit","e","preventDefault","onAdd","alert","type","placeholder","value","onChange","checked","currentTarget","Footer","Button","onClick","color","defaultProps","Header","title","toggleOn","showToggle","Task","task","onDoubleClick","toggle","id","cursor","delete","Tasks","tasks","map","index","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","console","log","getTasks","data","dataFile","addTask","Math","floor","random","newTask","deleteTask","filter","toggleReminder","toggleAddTask","path","exact","render","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"imBAuBeA,EArBD,WACV,OACI,gCACI,+CACA,4BAAG,6DACH,uBACA,oEACI,mBAAGC,KAAK,2DACJC,IAAI,aACJC,OAAO,SAFX,uCAQJ,uBAbJ,IAaU,uBAbV,IAagB,uBAbhB,IAasB,uBAbtB,IAa4B,uBACxB,cAAC,IAAD,CAAMC,UAAU,MAAMC,MAAO,CAACC,WAAW,QAASC,GAAG,IAArD,yBCmCGC,EAnDC,SAACC,GAAW,IAAD,EACCC,mBAAS,IADV,mBAChBC,EADgB,KACVC,EADU,OAEDF,mBAAS,IAFR,mBAEhBG,EAFgB,KAEXC,EAFW,OAGSJ,oBAAS,GAHlB,mBAGhBK,EAHgB,KAGNC,EAHM,KAoBvB,OACI,uBAAMZ,UAAU,WAAUa,SAhB9B,SAAkBC,GACdA,EAAEC,iBAEER,GAKJF,EAAMW,MAAM,CAACT,OAAME,MAAKE,aAExBH,EAAQ,IACRE,EAAO,IACPE,GAAY,IARRK,MAAM,oBAYV,UACI,sBAAKjB,UAAU,eAAf,UACI,yCACA,uBAAOkB,KAAK,OAAOC,YAAY,WAC3BC,MAAOb,EACPc,SAAU,SAACP,GAAD,OAAON,EAAQM,EAAEf,OAAOqB,aAG1C,sBAAKpB,UAAU,eAAf,UACI,+CACA,uBAAOkB,KAAK,OAAOC,YAAY,iBAC3BC,MAAOX,EACPY,SAAU,SAACP,GAAD,OAAOJ,EAAOI,EAAEf,OAAOqB,aAGzC,sBAAKpB,UAAU,kCAAf,UACI,iDACA,uBACIkB,KAAK,WACLI,QAASX,EACTS,MAAOT,EACPU,SAAU,SAACP,GAAD,OAAOF,EAAYE,EAAES,cAAcD,eAIrD,uBAAOtB,UAAU,gBAAgBkB,KAAK,SAASE,MAAM,kBCrClDI,EATA,WACX,OACI,mCACI,iEACA,cAAC,IAAD,CAAMrB,GAAG,SAAT,uBCHNsB,EAAS,SAACpB,GAEZ,OACI,wBAAQqB,QAASrB,EAAMqB,QACvBzB,MAAS,CAACC,WAAYG,EAAMsB,OAC5B3B,UAAU,MAFV,SAGIK,EAAME,QAKlBkB,EAAOG,aAAe,CAClBD,MAAO,YACPpB,KAAM,SAYKkB,QCvBTI,EAAS,SAACxB,GAEf,OACG,yBAAQL,UAAU,SAAlB,UACE,6BAAKK,EAAMyB,QACd,cAAC,EAAD,CACAH,MAAOtB,EAAM0B,SAAW,OAAS,QACjCxB,KAAMF,EAAM0B,SAAW,QAAU,MACjCL,QAAUrB,EAAM2B,iBAMnBH,EAAOD,aAAe,CACpBE,MAAO,gBAYMD,Q,QCbAI,EAjBF,SAAC5B,GACV,OACI,sBAAKL,UAAWK,EAAM6B,KAAKvB,SAAU,gBAAkB,OAAQwB,cAAe,kBAAM9B,EAAM+B,OAAO/B,EAAM6B,KAAKG,KAA5G,UACI,+BAAKhC,EAAM6B,KAAK3B,KACZ,cAAC,IAAD,CACIN,MAAQ,CACJ0B,MAAO,MACPW,OAAQ,WAEZZ,QAAS,kBAAMrB,EAAMkC,OAAOlC,EAAM6B,KAAKG,UAG/C,4BAAIhC,EAAM6B,KAAKzB,UCGZ+B,EAfD,SAACnC,GACX,OACI,mCACKA,EAAMoC,MAAMC,KAAI,SAACR,EAAMS,GAAP,OACb,cAAC,EAAD,CAEIT,KAAMA,EACNK,OAAQlC,EAAMkC,OACdH,OAAQ/B,EAAM+B,QAHTO,S,QCmIVC,MA7Hf,WAAgB,IAAD,EACyBtC,oBAAS,GADlC,mBACNuC,EADM,KACOC,EADP,OAGaxC,mBAAS,IAHtB,mBAGNmC,EAHM,KAGCM,EAHD,KAKbC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACeC,IADf,OACTC,EADS,OAEfC,QAAQC,IAAIF,GACZJ,EAASI,GAHM,2CAAH,qDAMdG,KACC,IAGH,IAAMJ,EAAU,uCAAG,4BAAAD,EAAA,6DAETM,EAAOC,EAFE,kBAMRD,GANQ,2CAAH,qDAmBVE,EAAO,uCAAG,WAAOvB,GAAP,iBAAAe,EAAA,sDAcRZ,EAAKqB,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EACzCC,EAfQ,aAeGxB,MAAOH,GACxBa,EAAS,GAAD,mBAAKN,GAAL,CAAWoB,KAhBL,2CAAH,sDAoBPC,EAAU,uCAAG,WAAOzB,GAAP,SAAAY,EAAA,sDAMjBF,EAASN,EAAMsB,QAAO,SAAC7B,GAAD,OAAUA,EAAKG,KAAOA,MAN3B,2CAAH,sDAUV2B,EAAc,uCAAG,WAAO3B,GAAP,SAAAY,EAAA,sDAwBrBF,EAASN,EAAMC,KAAI,SAACR,GAAD,OACjBA,EAAKG,KAAOA,EAAZ,2BAEGH,GAFH,IAGAvB,UAAYuB,EAAKvB,WAEfuB,MA9BiB,2CAAH,sDAmCpB,SAAS+B,IACPnB,GAAgBD,GAGlB,OACE,cAAC,IAAD,UACA,sBAAK7C,UAAU,YAAf,UAEE,cAAC,IAAD,CAAOkE,KAAK,IAAIC,OAAK,EAACC,OAAQ,SAAC/D,GAAD,OAE5B,qCACE,cAAC,EAAD,CAAQ0B,SAAUc,EAAab,WAAYiC,IAC1CpB,EAAc,cAAC,EAAD,CAAS7B,MAAOyC,IAAa,GAC3ChB,EAAM4B,OAAS,EAAI,cAAC,EAAD,CAAO5B,MAAOA,EAAOF,OAAQuB,EAAY1B,OAAQ4B,IAAoB,8BACzF,cAAC,EAAD,UAIJ,cAAC,IAAD,CAAOE,KAAK,SAASI,UAAW1E,UCvHvB2E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f942fab4.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <p><i>Last changes made in March</i></p>\r\n            <br/>\r\n            <p>Big credits to Traversy Media: &nbsp;\r\n                <a href=\"https://www.youtube.com/channel/UC29ju8bIPH5as8OGnQzwJyA\"\r\n                    rel='noreferrer'\r\n                    target='_blank'\r\n                    >\r\n                    Check out his channel!\r\n                </a>\r\n\r\n            </p>\r\n            <br/> <br/> <br/> <br/> <br/>\r\n            <Link className='btn' style={{background:'grey'}} to=\"/\">Go Back</Link>\r\n        </div> // we could use <a> tags, but then the page loads.\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = (props) => {\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if(!text) {\r\n            alert('Please add task');\r\n            return;\r\n        }\r\n\r\n        props.onAdd({text, day, reminder});\r\n\r\n        setText('');\r\n        setDay('');\r\n        setReminder(false);\r\n    }\r\n\r\n    return (\r\n        <form className='add-form'onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder='Add Task'\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" placeholder='Add Day & Time'\r\n                    value={day}\r\n                    onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input\r\n                    type=\"checkbox\" \r\n                    checked={reminder}\r\n                    value={reminder}\r\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            <input className='btn btn-block' type=\"submit\" value='Save Task' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Changes only affect each session</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = (props) => {\r\n\r\n    return (\r\n        <button onClick={props.onClick} \r\n        style = {{background: props.color}} \r\n        className='btn'>{\r\n            props.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n    text: 'Error',\r\n}\r\n\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func,\r\n\r\n}\r\n\r\n\r\nexport default Button\r\n","// import React from 'react' not neaded\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n\treturn (\r\n    <header className='header'>\r\n      <h1>{props.title}</h1>\r\n\t\t\t<Button \r\n\t\t\tcolor={props.toggleOn ? 'grey' : 'green'} \r\n\t\t\ttext={props.toggleOn ? 'Close' : 'Add'}\r\n\t\t\tonClick= {props.showToggle}\r\n\t\t\t/>\r\n    </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\n/* const headingStyle = {\r\n\tcolor: 'red',\r\n\tbackground: 'black',\r\n} */\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = (props) => {\r\n    return (\r\n        <div className={props.task.reminder? 'task reminder' : 'task'} onDoubleClick={() => props.toggle(props.task.id)}>\r\n            <h3>{props.task.text} \r\n                <FaTimes\r\n                    style= {{\r\n                        color: 'red',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                    onClick={() => props.delete(props.task.id)}\r\n                /> \r\n            </h3>\r\n            <p>{props.task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst Tasks = (props) => {\r\n    return (\r\n        <>\r\n            {props.tasks.map((task, index) => (\r\n                <Task \r\n                    key={index} \r\n                    task={task}\r\n                    delete={props.delete}\r\n                    toggle={props.toggle}\r\n                    /> // here we are passing the task further down as a prop\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","//npm run build (to update the build folder for production)\r\n//npm i react-router-dom (for router)\r\n//npm i json-server (i think)\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport About from './components/About';\r\nimport AddTask from './components/AddTask';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport Tasks from './components/Tasks';\r\nimport dataFile from './data.json';\r\n\r\nfunction App() {\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(()=>{  // runs when the page loads\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks();\r\n      console.log(tasksFromServer);\r\n      setTasks(tasksFromServer);\r\n    }\r\n\r\n    getTasks();\r\n  }, [] ) // we take an empty array as a \"dependency array\" if we want to pass in parameters\r\n\r\n  // Fetch tasks from JSON-server\r\n  const fetchTasks = async () =>{\r\n      // local JSON for now\r\n      const data = dataFile;\r\n      //const res = await fetch('http://localhost:5001/tasks'); // res is = response\r\n      //const data = await res.json();\r\n\r\n      return data;\r\n  }\r\n\r\n  const fetchTask = async (id) =>{\r\n      const res = await fetch(`http://localhost:5001/tasks/${id}`); // res is = response\r\n      const data = await res.json();\r\n\r\n      return data;\r\n  }\r\n\r\n  \r\n\r\n  // Add a task\r\n  const addTask = async (task) => {\r\n    /* const res = await fetch('http://localhost:5001/tasks', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(task),\r\n    })\r\n\r\n    const newTask = await res.json();\r\n    setTasks([...tasks, newTask]);\r\n */\r\n    //old local add. It adds id auto in json server\r\n    // used for GitHub page\r\n    const id = Math.floor(Math.random() * 10000) + 1;\r\n    const newTask = {id, ...task};\r\n    setTasks([...tasks,newTask]);\r\n  }\r\n\r\n  // Delete a Task\r\n  const deleteTask = async (id) => {\r\n    /* await fetch(`http://localhost:5001/tasks/${id}`, {\r\n      method: 'DELETE'\r\n    }); */\r\n    // for json-server \r\n\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  }\r\n\r\n  // Toggle reminder\r\n  const toggleReminder = async (id) =>{\r\n    /* const taskToToggle = await fetchTask(id);\r\n    const updatedTask = {...taskToToggle, reminder: !(taskToToggle.reminder)}\r\n\r\n    const res = await fetch(`http://localhost:5001/tasks/${id}` ,{\r\n      method: 'PUT',\r\n      headers:{\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updatedTask),\r\n    })\r\n\r\n    const data = await res.json();\r\n\r\n    setTasks(tasks.map((task) => (\r\n      task.id === id?\r\n      {\r\n      ...task,\r\n      reminder: (data.reminder),\r\n      } \r\n      : task\r\n    ))) */\r\n\r\n    // for GitHub\r\n    setTasks(tasks.map((task) => (\r\n      task.id === id?\r\n      {\r\n      ...task,\r\n      reminder: (!task.reminder),\r\n      } \r\n      : task\r\n    )));\r\n  }\r\n\r\n  // Toggle add task\r\n  function toggleAddTask() {\r\n    setShowAddTask(!showAddTask);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n    <div className='container'>\r\n\r\n      <Route path='/' exact render={(props) => \r\n        (\r\n        <>\r\n          <Header toggleOn={showAddTask} showToggle={toggleAddTask} />\r\n          {showAddTask ? <AddTask onAdd={addTask}/> : ''}\r\n          {tasks.length > 0 ? <Tasks tasks={tasks} delete={deleteTask} toggle={toggleReminder}/> : \"No active tasks. Well done!\" }  \r\n          <Footer />\r\n        </>\r\n        )}\r\n       />\r\n      <Route path='/about' component={About} />\r\n      \r\n    </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}